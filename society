#!/usr/bin/env bash

#
# @author Ari Setiawan
# @create 12.01-2024 14:31
# @github https://github.com/hxAri/Society
#
# Society Copyright (c) 2024 - Ari Setiawan <hxari@proton.me>
# Society Licence under GNU General Public Licence v3
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# Society Program is not affiliated with or endorsed, endorsed at all by
# Facebook or any other party, if you use the main account to use this
# tool we as Coders and Developers are not responsible for anything,
# use it at your own risk, and this is StrictlyÂ not for SPAM.
#

# Target basename.
pathname=$(basename $0)

# Please change this with your virtual enviroment excecutable.
virtual="/home/hxari/virtual/bin/activate"

# Clear the terminal screens.
clear

if [[ ! -f $virtual ]]; then
	echo -e "${virtual}: no such virtual environment"
	exit 1
fi

# Change current working directory.
cd $(dirname $0)

# Iterate down a (possible) chain of symlinks.
while [ -L "$pathname" ]
do
    pathname=$(readlink $pathname)
    cd $(dirname $pathname)
    pathname=$(basename $pathname)
done

# Activate the python virtual environment.
source $virtual

# Get the Society basepath.
basepath=$(pwd -P)

# Clean Python cache Byte-Code compiled.
function clean() {
	for cache in $(find ${basepath} | grep __pycache__); do
		if [[ -d $cache ]]; then
			rm -rf $cache
		fi
	done
}

action=${1,,}
arguments=()
if [[ $action == "" ]]; then
	action=running
else
	i=1
	for argument in ${@}; do
		if [[ $argument != $action ]] || [[ $i != 1 ]]; then
			arguments+=( $argument )
		fi
		i=$((i+1))
	done
fi

case ${action,,} in
	c|cleaner)
		contents=()
		if [[ -f "${basepath}/.gitignore" ]]; then
			while IFS= read -r content; do
				contents+=( "$content" )
			done < "${basepath}/.gitignore"
		fi
		for content in "${contents[@]}"; do
			if [[ ! -z "$content" ]]; then
				if [[ "${content:0:1}" == "#" ]]; then
					continue
				fi
				prefix="$(echo -e "$content" | cut -d "." -f 1)"
				length=${#prefix}
				if [[ "${prefix:$((length-1)):${#length}}" == "*" ]]; then
					if [[ "$prefix" == "*" ]]; then
						
						continue
					fi
					target="${basepath}/$content"
					prefix="$(echo -e "${target}" | cut -d "." -f 1)"
					extension="$(echo -e "${target}" | cut -d "." -f 2)"
					for file in $prefix; do
						if [[ "$file" == "$prefix" ]]; then
							continue
						fi
						if [[ -f "$file" ]]; then
							filename="${file:$((${#basepath}+1)):$((${#file}))}"
							removeable=
							while [[ -z "$removeable" ]]; do
								echo -e "remove: $filename [Y/n]" "\c"
								read removeable
								case "$removeable" in
									y|Y) rm $file ;;
									n|N)
									;;
									*)
										removeable=
									;;
								esac
							done
						fi
					done
				fi
			fi
		done
	;;
	i|install) python3 ${basepath}/setup.py install ${arguments[@]} && clean ;;
	p|package) pip ${arguments[@]} ;;
	r|running) python3 ${basepath}/src/society.py ${arguments[@]} && clean ;;
	s|service) python3 ${basepath}/src/service.py ${arguments[@]} && clean ;;
	u|upgrade)
		archive="society.tar.gz"
		wget --tries=20 "https://github.com/hxAri/Society/archive/refs/heads/main.tar.gz" -O "${basepath}/../${archive}"
		if [[ $? -eq 0 ]]; then
			cd "${basepath}/.."
			rm -rf "${basepath}"
			if [[ $? -eq 0 ]]; then
				tar -xvf "${archive}"
				if [[ $? -eq 0 ]]; then
					mv Society-main "${basepath}"
					mv properties.yaml ${$basepath}
					cd -
				fi
			fi
		fi
	;;
	z|zombie) python3 ${basepath}/src/zombie.py ${arguments[@]} && clean ;;
	account|download|graphql|id|testing) python3 ${basepath}/src/society.py "$@" && clean ;;
	*)
		echo -e ""
		echo -e "   Society Terminal Console"
		echo -e ""
		echo -e "   example [command] [arguments] [--options]"
		echo -e "   command c|cleaner                Cleaning The Society Files"
		echo -e "           i|install                Install Society as Python3 Module"
		echo -e "           p|package                Pip"
		echo -e "           r|running                Running The Society as CLI"
		echo -e "           s|service                Running The Society as Web Service"
		echo -e "           u|upgrade                Upgrade The Society code from original repository"
		echo -e "           z|zombie                 Running The Society as Bot Telegram"
		echo -e "           account                  Facebook Account management"
		echo -e "           download                 Facebook multithread media downloader"
		echo -e "           graphql                  Facebook graphql utilities"
		echo -e "           id                       Facebook get profile or page id"
		echo -e "           testing                  Just boring"
		echo -e ""
	;;
esac
